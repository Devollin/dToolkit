"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9297],{81670:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates and returns a new [Timer] object.\\n\\n```lua\\nlocal newTimer = Timer.new()\\nnewTimer:SetDuration(5)\\n\\nnewTimer.Finished:Connect(function()\\n\\tprint(\\"Finished!\\")\\n\\t\\n\\tnewTimer:Start()\\nend)\\n\\nnewTimer:Start()\\n```","params":[{"name":"duration","desc":"The duration you want to give to the [Timer]; or nil, if you need to set it dynamically.","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"Timer\\r\\n"}],"function_type":"static","source":{"line":87,"path":"lib/Timer.lua"}},{"name":"Start","desc":"Starts the [Timer].\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"}],"returns":[],"function_type":"static","source":{"line":113,"path":"lib/Timer.lua"}},{"name":"Stop","desc":"Stops the [Timer].\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"}],"returns":[],"function_type":"static","source":{"line":147,"path":"lib/Timer.lua"}},{"name":"Pause","desc":"Pauses the [Timer].\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"}],"returns":[],"function_type":"static","source":{"line":166,"path":"lib/Timer.lua"}},{"name":"IsRunning","desc":"Returns true or false, depending on if the [Timer] is running or not.\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","source":{"line":183,"path":"lib/Timer.lua"}},{"name":"SetDuration","desc":"Sets the duration of the [Timer].\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"},{"name":"newDuration","desc":"","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":191,"path":"lib/Timer.lua"}},{"name":"GetDuration","desc":"Gets the duration of the [Timer]. Returns 0 if the duration has not been set, otherwise, returns the duration.\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":204,"path":"lib/Timer.lua"}},{"name":"GetElapsed","desc":"Gets the elapsed time of the [Timer]. Returns 0 if the duration has not been set or if the [Timer] finished;\\notherwise returns the duration.\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":213,"path":"lib/Timer.lua"}},{"name":"Destroy","desc":"Destroys the [Timer] object.\\n\\t","params":[{"name":"self","desc":"","lua_type":"Timer"}],"returns":[],"function_type":"static","source":{"line":221,"path":"lib/Timer.lua"}}],"properties":[],"types":[{"name":"Finished","desc":"Fired when the Timer finishes running.","lua_type":"Signal<>","source":{"line":54,"path":"lib/Timer.lua"}},{"name":"Paused","desc":"Fired when the Timer has been paused.","lua_type":"Signal<>","source":{"line":60,"path":"lib/Timer.lua"}},{"name":"Updated","desc":"Fired when the Timer has been updated. The first number is the time remaining, the second is the time elapsed.","lua_type":"Signal<number, number>","source":{"line":66,"path":"lib/Timer.lua"}}],"name":"Timer","desc":"A timer class.","source":{"line":48,"path":"lib/Timer.lua"}}')}}]);