"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9668],{68852:t=>{t.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new [Stack] object.\\n\\n```lua\\nlocal stack = Stack.new(1, 2, 3, 4)\\n```","params":[{"name":"...","desc":"The initial list of items to hold in the [Stack].","lua_type":"a"}],"returns":[{"desc":"","lua_type":"Stack<a>\\r\\n"}],"function_type":"static","source":{"line":64,"path":"lib/Stack.lua"}},{"name":"Add","desc":"Adds an item to the top of the [Stack].\\n\\n```lua\\nstack:Add(5)\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"},{"name":"item","desc":"","lua_type":"a"}],"returns":[],"function_type":"static","source":{"line":78,"path":"lib/Stack.lua"}},{"name":"Pop","desc":"Returns the item at the top of the [Stack] and removes it from the [Stack]. This will return\\nnil if the [Stack] is empty. It is recommended to check if the [Stack] is empty by using\\n[Stack]:IsEmpty() before using this.\\n\\n```lua\\nprint(stack:Pop())\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"}],"returns":[{"desc":"","lua_type":"a\\r\\n"}],"function_type":"static","source":{"line":93,"path":"lib/Stack.lua"}},{"name":"Next","desc":"Removes the item at the top of the [Stack].\\n\\n```lua\\nprint(stack:Get())\\n\\nstack:Next()\\n\\nprint(stack:Get())\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"}],"returns":[],"function_type":"static","source":{"line":114,"path":"lib/Stack.lua"}},{"name":"Get","desc":"Returns the item at the top of the [Stack]. This will return nil if the [Stack] is empty. It\\nis recommended to check if the [Stack] is empty by using [Stack]:IsEmpty() before using this.\\n\\n```lua\\nprint(stack:Get())\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"}],"returns":[{"desc":"","lua_type":"a\\r\\n"}],"function_type":"static","source":{"line":132,"path":"lib/Stack.lua"}},{"name":"Clear","desc":"Clears out the [Stack] of all values. The [Stack] object remains usable.\\n\\n```lua\\nif not stack:IsEmpty() then\\n\\tstack:Clear()\\nend\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"}],"returns":[],"function_type":"static","source":{"line":151,"path":"lib/Stack.lua"}},{"name":"Remove","desc":"Removes a value from the [Stack] if is in the list.\\n\\n```lua\\nstack:Remove(1)\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"},{"name":"item","desc":"","lua_type":"a"}],"returns":[],"function_type":"static","source":{"line":164,"path":"lib/Stack.lua"}},{"name":"IsEmpty","desc":"Returns a boolean describing if the [Stack] is empty.\\n\\n```lua\\nif not stack:IsEmpty() then\\n\\tstack:Clear()\\nend\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","source":{"line":183,"path":"lib/Stack.lua"}},{"name":"Destroy","desc":"Clears the list and renders the [Stack] object unusable.\\n\\n```lua\\nstack:Destroy()\\n```\\n\\n\\t","params":[{"name":"self","desc":"","lua_type":"Stack<a>"}],"returns":[],"function_type":"static","source":{"line":196,"path":"lib/Stack.lua"}}],"properties":[],"types":[],"name":"Stack","desc":"A Stack class is used to hold a list of items which are accessible through a last-in, first-out\\nformat.\\n\\n```lua\\nlocal stack = Stack.new(1, 2, 3, 4)\\n\\nstack:Add(5)\\n\\nstack:Next()\\n\\nprint(stack:Get())\\n\\nstack:Remove(1)\\n\\nprint(stack:Pop())\\n\\nif not stack:IsEmpty() then\\n\\tstack:Clear()\\nend\\n\\nstack:Destroy()\\n```","source":{"line":50,"path":"lib/Stack.lua"}}')}}]);