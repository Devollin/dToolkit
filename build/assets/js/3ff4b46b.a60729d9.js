"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8510],{94231:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new [Connection] object.","params":[{"name":"signal","desc":"","lua_type":"Signal<a...>"},{"name":"callback","desc":"","lua_type":"(a...) -> ()"}],"returns":[{"desc":"","lua_type":"Connection<a...>\\r\\n"}],"function_type":"static","ignore":true,"source":{"line":101,"path":"lib/Signal.lua"}},{"name":"Disconnect","desc":"Disconnects the [Connection] object from the given [Signal]; renders it unusable.\\n\\t","params":[{"name":"self","desc":"","lua_type":"Connection<a...>"}],"returns":[],"function_type":"static","source":{"line":111,"path":"lib/Signal.lua"}}],"properties":[],"types":[],"name":"Connection","desc":"A class used to manage connections to a [Signal].\\n\\n:::info\\nThere is an alternative type named InternalConnection, which can be used for classes built using it! The primary\\ndifference is that InternalConnection drops all internal members, but removes them from the type, but not from the object.","source":{"line":93,"path":"lib/Signal.lua"}}')}}]);