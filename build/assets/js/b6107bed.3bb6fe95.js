"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2770],{39979:e=>{e.exports=JSON.parse('{"functions":[{"name":"SetCamera","desc":"Fixes the reference to the camera.\\n\\n```lua\\nCameraUtil:SetCamera()\\n```","params":[],"returns":[],"function_type":"method","source":{"line":37,"path":"lib/CameraUtil.lua"}},{"name":"HardReset","desc":"Destroys the Camera, and replaces it with a new one.\\n\\n```lua\\nCameraUtil:HardReset()\\n```","params":[],"returns":[],"function_type":"method","source":{"line":65,"path":"lib/CameraUtil.lua"}},{"name":"SoftReset","desc":"Resets the CameraSubject and CameraType of the Camera.\\n\\n```lua\\nCameraUtil:SoftReset()\\n```","params":[],"returns":[],"function_type":"method","source":{"line":86,"path":"lib/CameraUtil.lua"}},{"name":"GetCameraDistanceToHead","desc":"Returns the Camera\'s distance to the player\'s head. Can be nil if the player\'s head doesn\'t exist.\\n\\n```lua\\nlocal distanceToHead = CameraUtil:GetCameraDistanceToHead()\\n\\nif distanceToHead then\\n\\tif distanceToHead > 5 then\\n\\t\\tprint(\\"Greater than 5!\\")\\n\\telse\\n\\t\\tprint(\\"Less than 5!\\")\\n\\tend\\nelse\\n\\tprint(\\"Failed to get the distance!\\")\\nend\\n```","params":[],"returns":[{"desc":"","lua_type":"number?\\r\\n"}],"function_type":"method","source":{"line":112,"path":"lib/CameraUtil.lua"}},{"name":"IsCameraZoomedInFully","desc":"Returns a boolean describing if the Camera is zoomed in fully or not. Can be nil if the player\'s head doesn\'t exist.\\n\\n```lua\\nlocal isZoomedIn = CameraUtil:IsCameraZoomedInFully()\\n\\nprint(isZoomedIn)\\n```","params":[],"returns":[{"desc":"","lua_type":"boolean?\\r\\n"}],"function_type":"method","source":{"line":130,"path":"lib/CameraUtil.lua"}},{"name":"IsCameraZoomedOutFully","desc":"Returns a boolean describing if the Camera is zoomed out fully or not. Can be nil if the player\'s head doesn\'t exist.\\n\\n```lua\\nlocal isZoomedOut = CameraUtil:IsCameraZoomedOutFully()\\n\\nprint(isZoomedOut)\\n```","params":[],"returns":[{"desc":"","lua_type":"boolean?\\r\\n"}],"function_type":"method","source":{"line":147,"path":"lib/CameraUtil.lua"}}],"properties":[],"types":[],"name":"CameraUtil","desc":"A library meant to aide in the manipulaton of the camera.","realm":["Client"],"source":{"line":27,"path":"lib/CameraUtil.lua"}}')}}]);