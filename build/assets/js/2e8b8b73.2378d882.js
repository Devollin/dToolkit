"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8972],{63430:e=>{e.exports=JSON.parse('{"functions":[{"name":"Round","desc":"Returns a rounded number within certain parameters.","params":[{"name":"number","desc":"The number to round.","lua_type":"number"},{"name":"place","desc":"The decimal place value to round to.","lua_type":"number?"},{"name":"down","desc":"If false, rounds up; if true, rounds down; if nil, rounds to the nearest integer.","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","ignore":true,"source":{"line":36,"path":"lib/DisplayUtil.lua"}},{"name":"ValidateNumber","desc":"Returns the absolute value of the number given, along with the sign (or an empty string).","params":[{"name":"number","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"},{"desc":"","lua_type":"string"}],"function_type":"static","ignore":true,"source":{"line":53,"path":"lib/DisplayUtil.lua"}},{"name":"GetTime","desc":"Returns a string formatted as: xx:xx\\n\\n```lua\\nlocal timeString = DisplayUtil:GetTime(630)\\n\\nprint(timeString) --\x3e 10:30\\n```","params":[{"name":"seconds","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"method","source":{"line":71,"path":"lib/DisplayUtil.lua"}},{"name":"GetTimeWithHours","desc":"Returns a string formatted as: xx:xx:xx\\n\\n```lua\\nlocal timeString = DisplayUtil:GetTimeWithHours(630 * 60)\\n\\nprint(timeString) --\x3e 10:30:00\\n```","params":[{"name":"seconds","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"method","source":{"line":96,"path":"lib/DisplayUtil.lua"}},{"name":"GetTimeWithDays","desc":"Returns a string formatted as: xx:xx:xx:xx\\n\\n```lua\\nlocal timeString = DisplayUtil:GetTimeWithDays(2.5 * 24 * 60 * 60)\\n\\nprint(timeString) --\x3e 2:12:00:00\\n```","params":[{"name":"seconds","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"method","source":{"line":122,"path":"lib/DisplayUtil.lua"}},{"name":"GetTimeWithMilli","desc":"Returns a string formatted as: xx:xx.xxx\\n\\n```lua\\nlocal timeString = DisplayUtil:GetTimeWithMilli(78.512)\\n\\nprint(timeString) --\x3e 1:18.512\\n```","params":[{"name":"seconds","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"method","source":{"line":149,"path":"lib/DisplayUtil.lua"}},{"name":"GetNumberSuffix","desc":"Returns a shortened form of a number.\\nEx: 1000 -> 1k, 555555 -> 555k\\n\\n```lua\\nlocal shortenedNumber = DisplayUtil:GetNumberSuffix(5254, 2)\\n\\nprint(shortenedNumber) --\x3e 5.25k\\n```","params":[{"name":"number","desc":"","lua_type":"number"},{"name":"places","desc":"The decimal place value to show up to. If not given, will show decimals up to 3. Integers only.","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"method","source":{"line":178,"path":"lib/DisplayUtil.lua"}},{"name":"PlaceCommasInNumber","desc":"Places commas within a number, and returns the string.\\nEx: 1000 -> 1,000, 555555 -> 555,555\\n\\n```lua\\nlocal lengthenedNumber = DisplayUtil:PlaceCommasInNumber(5254)\\n\\nprint(lengthenedNumber) --\x3e 5,254\\n```","params":[{"name":"number","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"method","source":{"line":208,"path":"lib/DisplayUtil.lua"}},{"name":"NumberToRomanNumerals","desc":"Returns a string of roman numerals based off of the number given to it.\\n\\n```lua\\nlocal romanNumerals = DisplayUtil:NumberToRomanNumerals(10)\\n\\nprint(romanNumerals) --\x3e X\\n```","params":[{"name":"number","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"method","source":{"line":229,"path":"lib/DisplayUtil.lua"}}],"properties":[],"types":[],"name":"DisplayUtil","desc":"A library of helpful display-related functions.","source":{"line":25,"path":"lib/DisplayUtil.lua"}}')}}]);