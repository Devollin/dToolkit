"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6823],{39917:e=>{e.exports=JSON.parse('{"functions":[{"name":"Serialize","desc":"Serializes the given input, if supported.","params":[{"name":"input","desc":"The data to be serialized.","lua_type":"any"}],"returns":[{"desc":"The serialized data, or nil if it failed to serialize.","lua_type":"any"}],"function_type":"method","source":{"line":239,"path":"lib/Serial.lua"}},{"name":"SerializeList","desc":"Serializes the given input, if supported.","params":[{"name":"input","desc":"The array of data to be serialized.","lua_type":"{[any]: any}"}],"returns":[{"desc":"","lua_type":"{[any]: any}\\r\\n"}],"function_type":"method","source":{"line":258,"path":"lib/Serial.lua"}},{"name":"Deserialize","desc":"Deserializes the given input, if supported.","params":[{"name":"input","desc":"The data to be deserialized.","lua_type":"any"}],"returns":[{"desc":"The deserialized data, or nil if it failed to deserialize.","lua_type":"any"}],"function_type":"method","source":{"line":285,"path":"lib/Serial.lua"}},{"name":"DeserializeList","desc":"Deserializes the given input, if supported.","params":[{"name":"input","desc":"The array of data to be deserialized.","lua_type":"{[any]: any}"}],"returns":[{"desc":"","lua_type":"{[any]: any}\\r\\n"}],"function_type":"method","source":{"line":304,"path":"lib/Serial.lua"}}],"properties":[],"types":[],"name":"Serial","desc":"A library used to serialize / deserialize any data type.","source":{"line":229,"path":"lib/Serial.lua"}}')}}]);