"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8691],{65200:e=>{e.exports=JSON.parse('{"functions":[{"name":"Connect","desc":"Connects a callback to an [RemoteEvent].","params":[{"name":"name","desc":"The name of the stream you want to connect to.","lua_type":"string"},{"name":"callback","desc":"The callback that you want to connect to this stream.","lua_type":"(...any) -> ()"}],"returns":[{"desc":"","lua_type":"Signal.Connection<...any>\\r\\n"}],"function_type":"method","realm":["Client"],"source":{"line":73,"path":"lib/Network/Client.lua"}},{"name":"Disconnect","desc":"Disconnects an entire stream.","params":[{"name":"name","desc":"The name of the stream you want to destroy.","lua_type":"string"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":93,"path":"lib/Network/Client.lua"}},{"name":"Wait","desc":"Waits until an event with the given name is triggered.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"...any"}],"function_type":"method","realm":["Client"],"source":{"line":108,"path":"lib/Network/Client.lua"}},{"name":"Fire","desc":"Fires a [RemoteEvent] to the server within the given data stream.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"...","desc":"Any additional parameters you want to provide.","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":133,"path":"lib/Network/Client.lua"}},{"name":"Request","desc":"Fires a [RemoteEvent] to the server within the given data stream, and yields until the server responds.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"...","desc":"Any additional parameters you want to provide.","lua_type":"any"}],"returns":[{"desc":"","lua_type":"...any"}],"function_type":"method","realm":["Client"],"source":{"line":146,"path":"lib/Network/Client.lua"}},{"name":"OnRequest","desc":"Connects a callback to a given data stream.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"callback","desc":"The callback that you want to connect to this stream.","lua_type":"(...any) -> (...any)"}],"returns":[{"desc":"","lua_type":"Signal.Connection<...any>\\r\\n"}],"function_type":"method","realm":["Client"],"source":{"line":178,"path":"lib/Network/Client.lua"}},{"name":"Connect","desc":"Connects a callback to an [RemoteEvent].","params":[{"name":"name","desc":"The name of the stream you want to connect to.","lua_type":"string"},{"name":"callback","desc":"The callback that you want to connect to this stream.","lua_type":"(player: Player, ...any) -> ()"}],"returns":[{"desc":"","lua_type":"Signal.Connection<...any>\\r\\n"}],"function_type":"method","realm":["Server"],"source":{"line":71,"path":"lib/Network/Server.lua"}},{"name":"Disconnect","desc":"Disconnects an entire stream.","params":[{"name":"name","desc":"The name of the stream you want to destroy.","lua_type":"string"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":91,"path":"lib/Network/Server.lua"}},{"name":"Wait","desc":"Waits until an event with the given name is triggered.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"...any"}],"function_type":"method","realm":["Server"],"source":{"line":106,"path":"lib/Network/Server.lua"}},{"name":"Fire","desc":"Fires a [RemoteEvent] to the given player within the given data stream.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"player","desc":"The player you want to fire an event to.","lua_type":"Player"},{"name":"...","desc":"Any additional parameters you want to provide.","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":132,"path":"lib/Network/Server.lua"}},{"name":"FirePlayers","desc":"Fires a [RemoteEvent] to all the given players within the given data stream.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"players","desc":"An array of the players you want to fire an event to.","lua_type":"{Player}"},{"name":"...","desc":"Any additional parameters you want to provide.","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":146,"path":"lib/Network/Server.lua"}},{"name":"FireAllPlayers","desc":"Fires a [RemoteEvent] to all players within the given data stream.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"...","desc":"Any additional parameters you want to provide.","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":161,"path":"lib/Network/Server.lua"}},{"name":"Request","desc":"Fires a [RemoteEvent] to a player within the given data stream, and yields until the player responds.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"player","desc":"The player you want to request from.","lua_type":"Player"},{"name":"...","desc":"Any additional parameters you want to provide.","lua_type":"any"}],"returns":[{"desc":"","lua_type":"...any"}],"function_type":"method","realm":["Server"],"source":{"line":175,"path":"lib/Network/Server.lua"}},{"name":"OnRequest","desc":"Connects a callback to a given data stream.","params":[{"name":"name","desc":"The name of the stream.","lua_type":"string"},{"name":"callback","desc":"The callback that you want to connect to this stream.","lua_type":"(player: Player, ...any) -> (...any)"}],"returns":[{"desc":"","lua_type":"Signal.Connection<...any>\\r\\n"}],"function_type":"method","realm":["Server"],"source":{"line":213,"path":"lib/Network/Server.lua"}}],"properties":[],"types":[],"name":"Network","desc":"A library to handle networking easily.\\n\\n:::caution\\nIn dToolkit version 1.0.1 and onwards, Network has been split into Network.Client and Network.Server; make sure to update\\nyour references!\\n\\nThis has been done to resolve all typechecking-related errors, and to make usage easier!","source":{"line":23,"path":"lib/Network/init.lua"}}')}}]);